@using Signum.Entities.Reflection
@using Signum.Engine.Operations
@model TypeContext
@{ 
    var modifiable = (ModifiableEntity)Model.UntypedValue;
    var viewMode = (ViewMode)ViewData[ViewDataKeys.ViewMode];
    var partialViewName = ViewData[ViewDataKeys.PartialViewName].ToString();
    var wc = new WidgetContext { TypeContext = Model, PartialViewName = partialViewName, Url = Url };
}
<div id="@Model.Compose("panelPopup")" class="sf-popup-control modal fade" tabindex="-1" role="dialog" aria-labelledby="XXXX" data-prefix="@Model.Prefix">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                @if(viewMode == ViewMode.Navigate)
                {
                <button type="button" class="close sf-close-button">×</button>
                }
                else
                {
                    var saveProtected = (bool)ViewData[ViewDataKeys.RequiresSaveOperation]; 
                    <div style="float:right">
                        <button id="@Model.Compose("btnOk")" class="btn btn-primary sf-entity-button sf-close-button sf-ok-button@(saveProtected ? " sf-save-protected" : "")">@JavascriptMessage.ok.NiceToString()</button>
                        <button id="@Model.Compose("btnCancel")" class="btn btn-default sf-entity-button sf-close-button sf-cancel-button">@JavascriptMessage.cancel.NiceToString()</button>
                    </div>
                }
                <h4>
                    <span class="sf-entity-title">@(ViewBag.Title ?? Model.UntypedValue?.ToString()) </span>
                    @{
                        var ident = Model.UntypedValue as Entity;

                        if (ident != null && !ident.IsNew && Navigator.IsNavigable(ident, null))
                        {
                        <a href="@Navigator.NavigateRoute(ident)" class="sf-popup-fullscreen">
                            <span class="glyphicon glyphicon-new-window"></span>
                        </a>
                        }
                    }

                    <br />
                    <small>@Navigator.Manager.GetTypeTitle(modifiable)</small>
                </h4>
            </div>
            <div class="modal-body">
                @Html.RenderWidgets(wc)
                <div class="sf-button-bar">
                    @ButtonBarEntityHelper.GetForEntity(new EntityButtonContext
                    {
                        Url = Url,
                        ViewMode = viewMode,
                        ControllerContext = this.ViewContext,
                        PartialViewName = partialViewName,
                        Prefix = Model.Prefix,
                        ShowOperations = (bool?)ViewData[ViewDataKeys.ShowOperations] ?? true,
                    }, modifiable).ToStringButton(Html)
                </div>

                @Html.ValidationSummaryAjax(Model)
                <div id="@Model.Compose("divMainControl")" class="sf-main-control form-horizontal@(modifiable.IsGraphModified ? " sf-changed" : "")" 
        data-prefix="@Model.Prefix" 
        data-runtimeinfo="@Model.RuntimeInfo().ToString()"
        data-test-ticks="@DateTime.Now.Ticks">
                    @if (((bool?)ViewData[ViewDataKeys.WriteEntityState]) == true)
                    {
                        @Html.Hidden(Model.Compose(ViewDataKeys.EntityState), Navigator.Manager.SerializeEntity(modifiable))
                    }
                    @{ 
                        ViewData[ViewDataKeys.InPopup] = true;

                        Html.RenderPartial(partialViewName, Model);
                    }
                </div>
            </div>
        </div>
    </div>
</div>
