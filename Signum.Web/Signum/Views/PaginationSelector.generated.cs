#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    
    #line 3 "..\..\Signum\Views\PaginationSelector.cshtml"
    using Signum.Engine;
    
    #line default
    #line hidden
    using Signum.Entities;
    
    #line 1 "..\..\Signum\Views\PaginationSelector.cshtml"
    using Signum.Entities.DynamicQuery;
    
    #line default
    #line hidden
    
    #line 2 "..\..\Signum\Views\PaginationSelector.cshtml"
    using Signum.Entities.Reflection;
    
    #line default
    #line hidden
    using Signum.Utilities;
    
    #line 4 "..\..\Signum\Views\PaginationSelector.cshtml"
    using Signum.Utilities.DataStructures;
    
    #line default
    #line hidden
    using Signum.Web;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Signum/Views/PaginationSelector.cshtml")]
    public partial class _Signum_Views_PaginationSelector_cshtml : System.Web.Mvc.WebViewPage<Context>
    {
        public _Signum_Views_PaginationSelector_cshtml()
        {
        }
        public override void Execute()
        {
            
            #line 6 "..\..\Signum\Views\PaginationSelector.cshtml"
   
    Pagination pagination = (Pagination)ViewData[ViewDataKeys.Pagination];
    QueryDescription queryDescription = (QueryDescription)ViewData[ViewDataKeys.QueryDescription];

    pagination = FindOptions.ReplacePagination(queryDescription.QueryName, pagination);

    var paginate = pagination as Pagination.Paginate;

    ResultTable resultTable = (ResultTable)ViewData[ViewDataKeys.Results];


    Func<PaginationMode, int?, int?, Pagination> getPagination = (mode, elementsPerPage, pageNumber) =>
    {
        switch (mode)
        {
            case PaginationMode.All: return new Pagination.All();
            case PaginationMode.Firsts: return new Pagination.Firsts(elementsPerPage ?? 1);
            case PaginationMode.Paginate: return new Pagination.Paginate(elementsPerPage ?? 1);
            default: throw new InvalidOperationException();
        }
    };


    Func<Pagination, bool> isAllowed = pag => pag == FindOptions.ReplacePagination(queryDescription.QueryName, pag); 

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n<div");

WriteLiteral(" class=\"sf-search-footer\"");

WriteAttribute("style", Tuple.Create(" style=\"", 1201), Tuple.Create("\"", 1278)
, Tuple.Create(Tuple.Create("", 1209), Tuple.Create("display:", 1209), true)
            
            #line 32 "..\..\Signum\Views\PaginationSelector.cshtml"
, Tuple.Create(Tuple.Create("", 1217), Tuple.Create<System.Object, System.Int32>(((bool)ViewData[ViewDataKeys.ShowFooter])? "block": "none"
            
            #line default
            #line hidden
, 1217), false)
);

WriteLiteral(">\r\n    <div");

WriteLiteral(" class=\"sf-pagination-left\"");

WriteLiteral(">\r\n");

            
            #line 34 "..\..\Signum\Views\PaginationSelector.cshtml"
        
            
            #line default
            #line hidden
            
            #line 34 "..\..\Signum\Views\PaginationSelector.cshtml"
         if (resultTable != null)
        {
            if (pagination is Pagination.All)
            {

            
            #line default
            #line hidden
WriteLiteral("            <span>");

            
            #line 38 "..\..\Signum\Views\PaginationSelector.cshtml"
             Write(SearchMessage._0Results_N.NiceToString().ForGenderAndNumber(number: resultTable.TotalElements).FormatHtml(
                       new HtmlTag("span").Class("sf-pagination-strong").SetInnerText(resultTable.TotalElements.ToString())));

            
            #line default
            #line hidden
WriteLiteral("\r\n            </span>\r\n");

            
            #line 41 "..\..\Signum\Views\PaginationSelector.cshtml"
                    
            }
            else if (pagination is Pagination.Firsts)
            {
                var first = (Pagination.Firsts)pagination;
                    

            
            #line default
            #line hidden
WriteLiteral("            <span>");

            
            #line 47 "..\..\Signum\Views\PaginationSelector.cshtml"
             Write(SearchMessage.First0Results_N.NiceToString().ForGenderAndNumber(number: resultTable.Rows.Length).FormatHtml(
                    new HtmlTag("span").Class("sf-pagination-strong").Class(resultTable.Rows.Length == first.TopElements ? "sf-pagination-overflow" : null).SetInnerText(resultTable.Rows.Length.ToString())));

            
            #line default
            #line hidden
WriteLiteral("\r\n            </span>\r\n");

            
            #line 50 "..\..\Signum\Views\PaginationSelector.cshtml"
            }
            else if (pagination is Pagination.Paginate)
            {

            
            #line default
            #line hidden
WriteLiteral("            <span>\r\n");

WriteLiteral("                ");

            
            #line 54 "..\..\Signum\Views\PaginationSelector.cshtml"
           Write(SearchMessage._01of2Results_N.NiceToString().ForGenderAndNumber(number: resultTable.TotalElements).FormatHtml(
                        new HtmlTag("span").Class("sf-pagination-strong").SetInnerText(resultTable.StartElementIndex.ToString()),
                        new HtmlTag("span").Class("sf-pagination-strong").SetInnerText(resultTable.EndElementIndex.ToString()),
                        new HtmlTag("span").Class("sf-pagination-strong").SetInnerText(resultTable.TotalElements.ToString())
                        ));

            
            #line default
            #line hidden
WriteLiteral("\r\n            </span>\r\n");

            
            #line 60 "..\..\Signum\Views\PaginationSelector.cshtml"
            }
        }

            
            #line default
            #line hidden
WriteLiteral("    </div>\r\n\r\n    <div");

WriteLiteral(" class=\"sf-pagination-center form-inline form-xs\"");

WriteLiteral(">\r\n");

            
            #line 65 "..\..\Signum\Views\PaginationSelector.cshtml"
        
            
            #line default
            #line hidden
            
            #line 65 "..\..\Signum\Views\PaginationSelector.cshtml"
          
            var currentMode = pagination.GetMode();
            var modes = EnumExtensions.GetValues<PaginationMode>().Where(a => isAllowed(getPagination(a, null, null))).Select(pm => new SelectListItem
            {
                Text = pm.NiceToString(),
                Value = pm.ToString(),
                Selected = currentMode == pm
            }).ToList();
        
            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("        ");

            
            #line 74 "..\..\Signum\Views\PaginationSelector.cshtml"
   Write(Html.SafeDropDownList(Model.Compose("sfPaginationMode"), modes, new { @class = "sf-pagination-size form-control" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n");

            
            #line 76 "..\..\Signum\Views\PaginationSelector.cshtml"
        
            
            #line default
            #line hidden
            
            #line 76 "..\..\Signum\Views\PaginationSelector.cshtml"
         if (!(pagination is Pagination.All))
        {
            var currentElements = pagination.GetElementsPerPage();
            var elements = new List<int> { 5, 10, 20, 50, 100, 200 }.Where(a => isAllowed(getPagination(pagination.GetMode(), a, null))).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString(), Selected = i == currentElements }).ToList();

            
            
            #line default
            #line hidden
            
            #line 81 "..\..\Signum\Views\PaginationSelector.cshtml"
       Write(Html.SafeDropDownList(Model.Compose("sfElems"), elements, new { @class = "sf-pagination-size form-control" }));

            
            #line default
            #line hidden
            
            #line 81 "..\..\Signum\Views\PaginationSelector.cshtml"
                                                                                                                          
        }

            
            #line default
            #line hidden
WriteLiteral("    </div>\r\n\r\n    <div");

WriteLiteral(" class=\"sf-pagination-right\"");

WriteLiteral(">\r\n\r\n");

            
            #line 87 "..\..\Signum\Views\PaginationSelector.cshtml"
        
            
            #line default
            #line hidden
            
            #line 87 "..\..\Signum\Views\PaginationSelector.cshtml"
         if (resultTable != null && paginate != null)
        {
            MinMax<int> interval = new MinMax<int>(
             Math.Max(1, paginate.CurrentPage - 2),
             Math.Min(paginate.CurrentPage + 2, resultTable.TotalPages.Value));
                

            
            #line default
            #line hidden
WriteLiteral("            <input");

WriteLiteral(" type=\"hidden\"");

WriteAttribute("id", Tuple.Create(" id=\"", 4424), Tuple.Create("\"", 4455)
            
            #line 93 "..\..\Signum\Views\PaginationSelector.cshtml"
, Tuple.Create(Tuple.Create("", 4429), Tuple.Create<System.Object, System.Int32>(Model.Compose("sfPage")
            
            #line default
            #line hidden
, 4429), false)
);

WriteAttribute("value", Tuple.Create(" value=\"", 4456), Tuple.Create("\"", 4485)
            
            #line 93 "..\..\Signum\Views\PaginationSelector.cshtml"
, Tuple.Create(Tuple.Create("", 4464), Tuple.Create<System.Object, System.Int32>(paginate.CurrentPage
            
            #line default
            #line hidden
, 4464), false)
);

WriteLiteral(" />\r\n");

WriteLiteral("            <ul");

WriteLiteral(" class=\"pagination\"");

WriteLiteral(">\r\n                <li");

WriteAttribute("class", Tuple.Create(" class=\"", 4547), Tuple.Create("\"", 4605)
            
            #line 95 "..\..\Signum\Views\PaginationSelector.cshtml"
, Tuple.Create(Tuple.Create("", 4555), Tuple.Create<System.Object, System.Int32>((paginate.CurrentPage <= 1) ? "disabled" : null
            
            #line default
            #line hidden
, 4555), false)
);

WriteLiteral(" ><a");

WriteLiteral(" data-page=\"");

            
            #line 95 "..\..\Signum\Views\PaginationSelector.cshtml"
                                                                                          Write(paginate.CurrentPage - 1);

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteLiteral(" href=\"#\"");

WriteLiteral(">&laquo;</a></li>\r\n\r\n\r\n\r\n");

            
            #line 99 "..\..\Signum\Views\PaginationSelector.cshtml"
                
            
            #line default
            #line hidden
            
            #line 99 "..\..\Signum\Views\PaginationSelector.cshtml"
                 if (interval.Min != 1)
                {

            
            #line default
            #line hidden
WriteLiteral("                    <li><a");

WriteLiteral(" data-page=\"1\"");

WriteLiteral(" href=\"#\"");

WriteLiteral(">1</a></li>\r\n");

            
            #line 102 "..\..\Signum\Views\PaginationSelector.cshtml"
                    if (interval.Min - 1 != 1)
                    {

            
            #line default
            #line hidden
WriteLiteral("                    <li");

WriteLiteral(" class=\"disabled\"");

WriteLiteral("><span>...</span></li>\r\n");

            
            #line 105 "..\..\Signum\Views\PaginationSelector.cshtml"
                    }
                }

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 108 "..\..\Signum\Views\PaginationSelector.cshtml"
                
            
            #line default
            #line hidden
            
            #line 108 "..\..\Signum\Views\PaginationSelector.cshtml"
                 for (int i = interval.Min; i < paginate.CurrentPage; i++)
                {

            
            #line default
            #line hidden
WriteLiteral("                    <li><a");

WriteLiteral(" data-page=\"");

            
            #line 110 "..\..\Signum\Views\PaginationSelector.cshtml"
                                 Write(i);

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteLiteral(" href=\"#\"");

WriteLiteral(">");

            
            #line 110 "..\..\Signum\Views\PaginationSelector.cshtml"
                                              Write(i);

            
            #line default
            #line hidden
WriteLiteral("</a></li>  \r\n");

            
            #line 111 "..\..\Signum\Views\PaginationSelector.cshtml"
                }

            
            #line default
            #line hidden
WriteLiteral("\r\n                <li");

WriteLiteral(" class=\"active\"");

WriteLiteral("><span>");

            
            #line 113 "..\..\Signum\Views\PaginationSelector.cshtml"
                                    Write(paginate.CurrentPage.ToString());

            
            #line default
            #line hidden
WriteLiteral("</span></li>\r\n\r\n");

            
            #line 115 "..\..\Signum\Views\PaginationSelector.cshtml"
                
            
            #line default
            #line hidden
            
            #line 115 "..\..\Signum\Views\PaginationSelector.cshtml"
                 for (int i = paginate.CurrentPage + 1; i <= interval.Max; i++)
                {

            
            #line default
            #line hidden
WriteLiteral("                    <li><a");

WriteLiteral(" data-page=\"");

            
            #line 117 "..\..\Signum\Views\PaginationSelector.cshtml"
                                 Write(i);

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteLiteral(" href=\"#\"");

WriteLiteral(">");

            
            #line 117 "..\..\Signum\Views\PaginationSelector.cshtml"
                                              Write(i);

            
            #line default
            #line hidden
WriteLiteral("</a></li> \r\n");

            
            #line 118 "..\..\Signum\Views\PaginationSelector.cshtml"
                }

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 120 "..\..\Signum\Views\PaginationSelector.cshtml"
                
            
            #line default
            #line hidden
            
            #line 120 "..\..\Signum\Views\PaginationSelector.cshtml"
                 if (interval.Max != resultTable.TotalPages)
                {
                    if (interval.Max + 1 != resultTable.TotalPages)
                    {

            
            #line default
            #line hidden
WriteLiteral("                    <li");

WriteLiteral(" class=\"disabled\"");

WriteLiteral("><span>...</span></li> \r\n");

            
            #line 125 "..\..\Signum\Views\PaginationSelector.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral("                    <li><a");

WriteLiteral(" data-page=\"");

            
            #line 126 "..\..\Signum\Views\PaginationSelector.cshtml"
                                 Write(resultTable.TotalPages);

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteLiteral(" href=\"#\"");

WriteLiteral(">");

            
            #line 126 "..\..\Signum\Views\PaginationSelector.cshtml"
                                                                   Write(resultTable.TotalPages);

            
            #line default
            #line hidden
WriteLiteral("</a></li> \r\n");

            
            #line 127 "..\..\Signum\Views\PaginationSelector.cshtml"
                }

            
            #line default
            #line hidden
WriteLiteral("\r\n                <li");

WriteAttribute("class", Tuple.Create(" class=\"", 5850), Tuple.Create("\"", 5927)
            
            #line 129 "..\..\Signum\Views\PaginationSelector.cshtml"
, Tuple.Create(Tuple.Create("", 5858), Tuple.Create<System.Object, System.Int32>(resultTable.TotalPages <= paginate.CurrentPage ? "disabled" : null
            
            #line default
            #line hidden
, 5858), false)
);

WriteLiteral("><a");

WriteLiteral(" class=\"sf-pagination-button\"");

WriteLiteral(" data-page=\"");

            
            #line 129 "..\..\Signum\Views\PaginationSelector.cshtml"
                                                                                                                                         Write(paginate.CurrentPage + 1);

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteLiteral(" href=\"#\"");

WriteLiteral(">&raquo;</a></li>\r\n            </ul>\r\n");

            
            #line 131 "..\..\Signum\Views\PaginationSelector.cshtml"
        }

            
            #line default
            #line hidden
WriteLiteral("    </div>\r\n</div>\r\n");

        }
    }
}
#pragma warning restore 1591
