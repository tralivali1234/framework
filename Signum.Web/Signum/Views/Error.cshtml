@{
    this.ViewBag.Title = "Error";

    var exceptionEntity = Signum.Engine.Basics.ExceptionLogic.GetExceptionEntity(Model.Exception);

    var request = Url.RequestContext.HttpContext.Request.Url;

   
}
@model HandleErrorInfo 
<div id="main-home">
    @if (Model.Exception is ApplicationException)
    {
        <h1>@Model.Exception.Message</h1>
    }
    else
    {
        <h1>@("Error " + this.ViewContext.HttpContext.Response.StatusCode)</h1>
        <h2>thrown @Model.Exception.GetType().Name</h2>
    }
    <div class="error-region">
        @if (exceptionEntity != null)
        {
            var viewable = false;

            try
            {
                viewable = exceptionEntity != null && Navigator.IsNavigable(exceptionEntity, null);
            }
            catch
            {

            }

            <p>
                <span>Link: </span>
                @if (viewable)
                {
                    <a href="@Navigator.NavigateRoute(exceptionEntity)">@request.Scheme://@request.Authority@Navigator.NavigateRoute(exceptionEntity)</a>
                }
                else
                {
                    <code>@request.Scheme://@request.Authority@Navigator.NavigateRoute(exceptionEntity)</code>
                }
               
            </p>
        }

        <p>
            <span>Controller: </span>
            <code>@Model.ControllerName</code>
        </p>
        <p>
            <span>Action: </span>
            <code>@Model.ActionName</code>
        </p>
    </div>
    <div class="error-region">
        <span>Message: </span>
        <pre><code>@Model.Exception.Message</code></pre>
        <span>StackTrace: </span>
        <pre><code>@Model.Exception.StackTrace</code></pre>
    </div>
</div>
